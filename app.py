import streamlit as st
import plotly.graph_objects as go
import numpy as np
import pandas as pd
from datetime import datetime

st.set_page_config(page_title="–°–∏–º—É–ª–∞—Ü–∏—è –Ω–∞ —Å–±–ª—ä—Å—ä–∫", layout="wide")

st.title("üß™ 3D –°–∏–º—É–ª–∞—Ü–∏—è –Ω–∞ —Å–±–ª—ä—Å—ä–∫ –Ω–∞ —á–∞—Å—Ç–∏—Ü–∏ —Å —Ä–µ–∑—É–ª—Ç–∞—Ç–∏ –∏ —Ö–∏–ø–æ—Ç–µ–∑–∏")

st.markdown("""
–î–æ–±—Ä–µ –¥–æ—à—ä–ª –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞ —Å–∏–º—É–ª–∞—Ü–∏—è, –≤–¥—ä—Ö–Ω–æ–≤–µ–Ω–∞ –æ—Ç –µ–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ç–µ –≤ –¶–ï–†–ù!

–¢—É–∫ —â–µ —Å–∏–º—É–ª–∏—Ä–∞—à —Å–±–ª—ä—Å—ä–∫ –º–µ–∂–¥—É –¥–≤–µ —á–∞—Å—Ç–∏—Ü–∏, —â–µ –Ω–∞–±–ª—é–¥–∞–≤–∞—à —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ,  
—â–µ –∞–Ω–∞–ª–∏–∑–∏—Ä–∞—à –µ–Ω–µ—Ä–≥–∏—è—Ç–∞ –∏ –∏–º–ø—É–ª—Å–∞ –∏ —â–µ –Ω–∞–ø—Ä–∞–≤–∏—à —Å–≤–æ—è —Ö–∏–ø–æ—Ç–µ–∑–∞.  
""")

# –í—ä–≤–µ–∂–¥–∞–Ω–µ –Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
st.markdown("## üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ —á–∞—Å—Ç–∏—Ü–∏—Ç–µ")

col1, col2 = st.columns(2)

with col1:
    m1 = st.number_input("–ú–∞—Å–∞ –Ω–∞ —á–∞—Å—Ç–∏—Ü–∞ 1 (kg)", min_value=0.1, value=5.0, step=0.1)
    v1 = st.number_input("–°–∫–æ—Ä–æ—Å—Ç –Ω–∞ —á–∞—Å—Ç–∏—Ü–∞ 1 (m/s)", value=5.0, step=0.1)

with col2:
    m2 = st.number_input("–ú–∞—Å–∞ –Ω–∞ —á–∞—Å—Ç–∏—Ü–∞ 2 (kg)", min_value=0.1, value=5.0, step=0.1)
    v2 = st.number_input("–°–∫–æ—Ä–æ—Å—Ç –Ω–∞ —á–∞—Å—Ç–∏—Ü–∞ 2 (m/s)", value=-3.0, step=0.1)

# –ò–∑—á–∏—Å–ª–µ–Ω–∏—è
v1_final = ((m1 - m2) / (m1 + m2)) * v1 + ((2 * m2) / (m1 + m2)) * v2
v2_final = ((2 * m1) / (m1 + m2)) * v1 + ((m2 - m1) / (m1 + m2)) * v2

# –í—Ä–µ–º–µ–≤–∞ –ª–∏–Ω–∏—è
t = np.linspace(0, 2, 30)
x1 = v1 * t
x2 = 10 + v2 * t

# –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∫–∞–¥—Ä–∏
frames = []
for i in range(len(t)):
    frames.append(go.Frame(data=[
        go.Scatter3d(x=[x1[i]], y=[0], z=[0], mode='markers+text',
                     marker=dict(size=10, color='blue'),
                     text=["–ß–∞—Å—Ç–∏—Ü–∞ 1"], textposition="top center"),
        go.Scatter3d(x=[x2[i]], y=[0], z=[0], mode='markers+text',
                     marker=dict(size=10, color='red'),
                     text=["–ß–∞—Å—Ç–∏—Ü–∞ 2"], textposition="top center")
    ]))

layout = go.Layout(
    scene=dict(
        xaxis=dict(range=[-10, 30], title='–ü–æ–∑–∏—Ü–∏—è X'),
        yaxis=dict(range=[-5, 5], title='Y'),
        zaxis=dict(range=[-5, 5], title='Z'),
    ),
    title="3D –ê–Ω–∏–º–∞—Ü–∏—è –Ω–∞ —Å–±–ª—ä—Å—ä–∫",
    margin=dict(l=0, r=0, b=0, t=40),
    height=500,
    updatemenus=[dict(type="buttons", showactive=False,
                      buttons=[dict(label="‚ñ∂ –ü—É—Å–Ω–∏ –∞–Ω–∏–º–∞—Ü–∏—è—Ç–∞",
                                    method="animate",
                                    args=[None, {"frame": {"duration": 100, "redraw": True},
                                                 "fromcurrent": True}])])]
)

fig = go.Figure(
    data=[
        go.Scatter3d(x=[x1[0]], y=[0], z=[0], mode='markers', marker=dict(size=10, color='blue')),
        go.Scatter3d(x=[x2[0]], y=[0], z=[0], mode='markers', marker=dict(size=10, color='red'))
    ],
    layout=layout,
    frames=frames
)

st.markdown("## üé• –ê–Ω–∏–º–∞—Ü–∏—è")
st.plotly_chart(fig)

# –†–µ–∑—É–ª—Ç–∞—Ç–∏
st.markdown("## üìä –†–µ–∑—É–ª—Ç–∞—Ç–∏ –æ—Ç —Å–±–ª—ä—Å—ä–∫–∞")

impulse_before = m1 * v1 + m2 * v2
impulse_after = m1 * v1_final + m2 * v2_final

energy_before = 0.5 * m1 * v1 ** 2 + 0.5 * m2 * v2 ** 2
energy_after = 0.5 * m1 * v1_final ** 2 + 0.5 * m2 * v2_final ** 2

st.write(f"**–ò–º–ø—É–ª—Å –ø—Ä–µ–¥–∏ —Å–±–ª—ä—Å—ä–∫–∞:** {impulse_before:.2f} kg¬∑m/s")
st.write(f"**–ò–º–ø—É–ª—Å —Å–ª–µ–¥ —Å–±–ª—ä—Å—ä–∫–∞:** {impulse_after:.2f} kg¬∑m/s")
st.write(f"**–ö–∏–Ω–µ—Ç–∏—á–Ω–∞ –µ–Ω–µ—Ä–≥–∏—è –ø—Ä–µ–¥–∏ —Å–±–ª—ä—Å—ä–∫–∞:** {energy_before:.2f} J")
st.write(f"**–ö–∏–Ω–µ—Ç–∏—á–Ω–∞ –µ–Ω–µ—Ä–≥–∏—è —Å–ª–µ–¥ —Å–±–ª—ä—Å—ä–∫–∞:** {energy_after:.2f} J")

# –í—ä–ø—Ä–æ—Å–∏
st.markdown("""---  
## ‚ùì –í—ä–ø—Ä–æ—Å–∏ –∑–∞ —Ä–∞–∑–º–∏—Å—ä–ª

- –ó–∞–ø–∞–∑–≤–∞ –ª–∏ —Å–µ –∏–º–ø—É–ª—Å—ä—Ç?
- –ó–∞–ø–∞–∑–≤–∞ –ª–∏ —Å–µ –∫–∏–Ω–µ—Ç–∏—á–Ω–∞—Ç–∞ –µ–Ω–µ—Ä–≥–∏—è?
- –ö–∞–∫–≤–æ –±–∏ —Å—Ç–∞–Ω–∞–ª–æ –∞–∫–æ –µ–¥–Ω–∞—Ç–∞ —á–∞—Å—Ç–∏—Ü–∞ –µ –ø–æ-—Ç–µ–∂–∫–∞?
- –ö–∞–∫—ä–≤ —Ç–∏–ø —Å–±–ª—ä—Å—ä–∫ –µ —Ç–æ–≤–∞ (–µ–ª–∞—Å—Ç–∏—á–µ–Ω, –Ω–µ–µ–ª–∞—Å—Ç–∏—á–µ–Ω)?
""")

# –•–∏–ø–æ—Ç–µ–∑–∞
st.markdown("---")
st.markdown("## üß† –í—ä–≤–µ–¥–∏ —Å–≤–æ—è —Ö–∏–ø–æ—Ç–µ–∑–∞:")

hypothesis = st.text_area("–ö–∞–∫–≤–æ –æ—á–∞–∫–≤–∞—à –¥–∞ —Å–µ —Å–ª—É—á–∏ –ø—Ä–∏ —Å–±–ª—ä—Å—ä–∫–∞?", height=150)

if st.button("üì§ –ò–∑–ø—Ä–∞—Ç–∏ —Ö–∏–ø–æ—Ç–µ–∑–∞—Ç–∞"):
    if hypothesis.strip():
        # –∑–∞–ø–∏—Å –≤ CSV —Ñ–∞–π–ª
        df = pd.DataFrame([{
            "timestamp": datetime.now().isoformat(),
            "mass1": m1,
            "velocity1": v1,
            "mass2": m2,
            "velocity2": v2,
            "hypothesis": hypothesis
        }])
        df.to_csv("hypotheses.csv", mode='a', index=False, header=False)
        st.success("–•–∏–ø–æ—Ç–µ–∑–∞—Ç–∞ —Ç–∏ –µ –∑–∞–ø–∏—Å–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ! üöÄ")
    else:
        st.warning("–ú–æ–ª—è, –≤—ä–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –ø—Ä–µ–¥–∏ –¥–∞ –∏–∑–ø—Ä–∞—Ç–∏—à.")
